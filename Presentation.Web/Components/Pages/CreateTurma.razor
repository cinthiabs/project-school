@page "/turma-create"
@page "/turma-create/{Id:int}"
@using Presentation.Web.Models.DTOs
@using Presentation.Web.Models.Enums
@using Presentation.Web.Services

@inject ITurmaService _turmaService
@inject NavigationManager NavigationManager

<h3>@Title</h3>

<EditForm Model="turma" OnValidSubmit="OnValidSubmit" FormName="turmaForm">
    <div class="form-group">
        <label for="Curso">Curso:</label>
        <InputSelect @bind-Value="@selectedCurso" class="form-control">
            <option value="">Selecione um curso</option>
            @foreach (Curso curso in Enum.GetValues(typeof(Curso)))
            {
                <option value="@curso">@Enum.GetName(typeof(Curso), curso)</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="Turma">Turma:</label>
        <InputText @bind-Value="@turma.Turma" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Ano">Ano:</label>
        <InputNumber @bind-Value="@turma.Ano" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">@ButtonText</button>
</EditForm>

@code {

    [Parameter]
    public int Id { get; set; } = 0;

    string Title { get; set; }
    string ButtonText { get; set; }

    TurmaDTO turma = new TurmaDTO();
    Curso selectedCurso; 

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            turma = await _turmaService.GetById(Id);
            selectedCurso = turma.Curso_Id;
            Title = "Editar Turma";
            ButtonText = "Atualizar";
        }
        else
        {
            Title = "Nova Turma";
            ButtonText = "Criar";
        }
    }

    private async Task OnValidSubmit()
    {
        try
        {
            turma.Curso_Id = selectedCurso; 

            if (turma.Id == 0)
            {
                await _turmaService.Create(turma);
            }
            else
            {
                await _turmaService.Update(turma.Id, turma);
            }
            NavigationManager.NavigateTo("/turma-grid");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao cadastrar turma: {ex.Message}");
        }
    }
}
